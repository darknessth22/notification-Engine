#!/usr/bin/env python3
"""
WhatsApp Image Sender - Test sending images via WhatsApp API
"""
import requests
import json
import sys
import os
from pathlib import Path

API_BASE_URL = "http://localhost:8000"

def check_connection():
    """Check if WhatsApp is connected"""
    try:
        response = requests.get(f"{API_BASE_URL}/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            return data.get('baileys_connected', False)
    except:
        pass
    return False

def send_image_file(phone, image_path, caption=None):
    """Send an image file"""
    try:
        if not os.path.exists(image_path):
            print(f"Error: Image file not found: {image_path}")
            return False
        
        print(f"Sending image: {image_path}")
        print(f"To: {phone}")
        if caption:
            print(f"Caption: {caption}")
        
        files = {'image': open(image_path, 'rb')}
        data = {'phone': phone}
        if caption:
            data['caption'] = caption
        
        response = requests.post(
            f"{API_BASE_URL}/send-image",
            files=files,
            data=data,
            timeout=60
        )
        
        files['image'].close()
        
        if response.status_code == 200:
            result = response.json()
            print("SUCCESS!")
            print(f"Message ID: {result.get('messageId', 'Unknown')}")
            print(f"File: {result.get('fileName', 'Unknown')}")
            print(f"Type: {result.get('fileType', 'Unknown')}")
            return True
        else:
            error_data = response.json()
            print(f"FAILED: {error_data.get('detail', 'Unknown error')}")
            return False
            
    except Exception as e:
        print(f"ERROR: {e}")
        return False

def send_image_url(phone, image_url, caption=None):
    """Send an image from URL"""
    try:
        print(f"Sending image from URL: {image_url}")
        print(f"To: {phone}")
        if caption:
            print(f"Caption: {caption}")
        
        payload = {
            "phone": phone,
            "imageUrl": image_url
        }
        if caption:
            payload["caption"] = caption
        
        response = requests.post(
            f"{API_BASE_URL}/send-image-url",
            json=payload,
            timeout=60
        )
        
        if response.status_code == 200:
            result = response.json()
            print("SUCCESS!")
            print(f"Message ID: {result.get('messageId', 'Unknown')}")
            print(f"URL: {result.get('imageUrl', 'Unknown')}")
            return True
        else:
            error_data = response.json()
            print(f"FAILED: {error_data.get('detail', 'Unknown error')}")
            return False
            
    except Exception as e:
        print(f"ERROR: {e}")
        return False

def create_sample_images():
    """Create sample images for testing"""
    # Create a simple colored image using PIL if available
    try:
        from PIL import Image, ImageDraw, ImageFont
        
        # Create uploads directory
        os.makedirs("sample_images", exist_ok=True)
        
        # Create a simple test image
        img = Image.new('RGB', (400, 300), color='lightblue')
        draw = ImageDraw.Draw(img)
        
        # Add some text
        try:
            font = ImageFont.load_default()
        except:
            font = None
            
        draw.text((50, 100), "WhatsApp Test Image", fill='black', font=font)
        draw.text((50, 150), "Generated by Python", fill='darkblue', font=font)
        draw.text((50, 200), "API Testing", fill='darkgreen', font=font)
        
        # Save the image
        test_image_path = "sample_images/test_image.png"
        img.save(test_image_path)
        print(f"Created sample image: {test_image_path}")
        return test_image_path
        
    except ImportError:
        print("PIL/Pillow not available. Please provide your own image file.")
        return None

def main():
    print("WhatsApp Image Sender")
    print("=" * 40)
    
    # Check connection
    if not check_connection():
        print("ERROR: WhatsApp not connected! Please scan QR code first.")
        return
    
    print("WhatsApp connection: OK")
    
    # Get phone number
    if len(sys.argv) >= 2:
        phone = sys.argv[1]
    else:
        phone = input("Enter phone number (with country code): ").strip()
    
    if not phone:
        print("ERROR: Phone number required!")
        return
    
    print(f"Target phone: {phone}")
    
    # Choose sending method
    print("\nChoose image sending method:")
    print("1. Send image file from computer")
    print("2. Send image from URL")
    print("3. Create and send sample image")
    
    choice = input("Enter choice (1-3): ").strip()
    
    if choice == "1":
        # Send image file
        if len(sys.argv) >= 3:
            image_path = sys.argv[2]
        else:
            image_path = input("Enter path to image file: ").strip()
        
        if not image_path:
            print("ERROR: Image path required!")
            return
        
        caption = input("Enter caption (optional): ").strip() or None
        
        success = send_image_file(phone, image_path, caption)
        
    elif choice == "2":
        # Send image from URL
        if len(sys.argv) >= 3:
            image_url = sys.argv[2]
        else:
            image_url = input("Enter image URL: ").strip()
        
        if not image_url:
            print("ERROR: Image URL required!")
            return
        
        caption = input("Enter caption (optional): ").strip() or None
        
        success = send_image_url(phone, image_url, caption)
        
    elif choice == "3":
        # Create and send sample image
        sample_path = create_sample_images()
        if sample_path:
            caption = "This is a test image generated by the WhatsApp API"
            success = send_image_file(phone, sample_path, caption)
        else:
            print("Could not create sample image.")
            success = False
    
    else:
        print("Invalid choice!")
        return
    
    if success:
        print("\nImage sent successfully!")
    else:
        print("\nFailed to send image.")

if __name__ == "__main__":
    main()
